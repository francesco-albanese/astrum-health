{"version":3,"sources":["tables.es6"],"names":["checkStatus","response","error","status","Error","statusText","parseJSON","json","production","jsonPath","fetch","then","data","dynamicTable","init","catch","cacheDom","$tableContainer","$","$tabActive","createTableRow","$tableRow","addClass","append","createTableCell","$tableCell","generateRowTitles","rowTitles","$tableRowTitles","forEach","titleObj","index","$tableHeader","text","title","generateRowData","rowData","tableRow","$tableRows","generateTableCells","tableRowObj","rows","row","cell","generateTableCellContent","assignClasses","tableCell","content","isEmptyCell","isTicked","html","cssClass","isTitle","isUnitMeasure","isNotApplicable","tableHeadersFixed","tableRowCloned","clone","insertAfter","tableLeftPosition","position","left","$tabContent","css","outerHeight","window","on","scrollTop","tableRowOffset","offset","top","Math","round","scrollLeft","removeClass","bindEvents","hover","parent"],"mappings":"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","file":"tables.js","sourcesContent":["(() => {\n    function checkStatus(response) {\n        var error = null;\n        if (response.status >= 200 && response.status < 300) {\n            return response\n        } else {\n            error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n\n    function parseJSON(response) {\n        return response.json()\n    }\n\n    let production = true;\n    let jsonPath = production ? \"/js/table-data.json\" : \"/js/es6/table-data.json\";\n\n    fetch(jsonPath)\n        .then(checkStatus)\n        .then(parseJSON)\n        .then((data) => dynamicTable.init(data))\n        .catch((error) => {\n            throw('request failed', error)\n        })\n    \n    const dynamicTable = {\n        cacheDom() {\n            this.$tableContainer = $('.table-container');\n            this.$tabActive = $('.tab__title[data-tab=\"1\"]');\n        },\n\n        createTableRow() {\n            let $tableRow = $('<div />').addClass('table-row');\n            dynamicTable.$tableContainer.append($tableRow);\n            return $tableRow;\n        },\n\n        createTableCell() {\n            let $tableCell = $('<div />').addClass('table-cell');\n            this.$tableRow.append($tableCell);\n            return $tableCell;\n        },\n\n        generateRowTitles(rowTitles) {\n            let $tableRow = this.createTableRow();\n            this.$tableRowTitles = $tableRow;\n\n            rowTitles.forEach((titleObj, index) => {\n                let $tableHeader = $('<div />').addClass('table-header table-cell').addClass(`table-col${index+1}`);\n                $tableHeader.text(titleObj.title);\n                $tableRow.append($tableHeader);\n            });\n        },\n\n        generateRowData(rowData) {\n            rowData.forEach((tableRow) => {\n                let $tableRows = this.createTableRow();\n                this.generateTableCells($tableRows, tableRow);\n            });\n        },\n\n        generateTableCells(tableRow, tableRowObj) {\n            this.$tableRow = tableRow;\n            tableRowObj.rows.forEach((row, index) => {\n                let $tableCell = [this.createTableCell()];\n                $tableCell.forEach((cell) => {\n                    this.generateTableCellContent(row, cell);\n                    this.assignClasses(row, cell, index + 1);\n                });\n            }); \n        },\n\n        generateTableCellContent(row, tableCell) {\n            let content = \"\";\n            if (row.isEmptyCell) {\n                content += \"-\";\n            } else if (row.isTicked) {\n                content += \"<i class='fa fa-dot-circle-o'></i>\";\n            } else {\n                content = row.content;\n            }\n            tableCell.html(content);\n        },\n\n        assignClasses(row, tableCell, index) {\n            let cssClass = \"\";\n            if (row.isTitle) {\n                cssClass += \"table-cell-title\";\n            } else if (row.isUnitMeasure) {\n                cssClass += \"table-cell-unit-measure\";\n            } else if (row.isNotApplicable) {\n                cssClass += \"table-cell-not-applicable\";\n            }\n            tableCell.addClass(cssClass).addClass(`table-col${index}`);\n        },\n\n        tableHeadersFixed(tableRow) {\n            let tableRowCloned = tableRow.clone().insertAfter(tableRow);\n            let tableLeftPosition = $('.table-container').position().left;\n            const $tabContent = $('.tab__content.overflow-auto');\n            tableRowCloned.addClass('table-row-cloned');\n            tableRowCloned.css('top', $('.header--fixed-top').outerHeight());\n            $(window).on('scroll', () => {\n                let scrollTop = $(window).scrollTop();\n                let tableRowOffset = tableRow.offset().top - tableRow.outerHeight();\n                if (scrollTop >= tableRowOffset) {\n                    tableRowCloned.addClass('visible');\n                    $('.table-row-cloned.visible').css('left', Math.round($tabContent.position().left) + (-$tabContent.scrollLeft()));\n                } else {\n                    tableRowCloned.removeClass('visible');\n                }\n            });\n\n            $tabContent.on('scroll', function() {\n                $('.table-row-cloned.visible').css('left', Math.round($(this).position().left) + (-$(this).scrollLeft()));\n            })\n        },\n\n        bindEvents() {\n            this.$tabActive.on('click', () => {\n                this.tableHeadersFixed(this.$tableRowTitles);\n            });\n\n            $('.table-cell').hover(function() {\n                $(this).parent().addClass('highlight');\n                let index = $(this).index() + 1;\n                $(`.table-col${index}`).addClass('highlight');\n            }, function() {\n                $(this).parent().removeClass('highlight');\n                let index = $(this).index() + 1;\n                $(`.table-col${index}`).removeClass('highlight');\n            });\n        },\n\n        init(data) {\n            this.cacheDom();\n            this.generateRowTitles(data.rowTitles);\n            this.generateRowData(data.rowData);\n            this.bindEvents();\n        }\n    };\n    \n})();\n"]}