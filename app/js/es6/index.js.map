{"version":3,"sources":["index.es6"],"names":["googleMap","location","title","lat","lng","mapOptions","center","zoom","mapTypeControl","scrollwheel","initMap","map","google","maps","Map","document","querySelector","appendMarkers","bounds","LatLngBounds","position","marker","Marker","animation","Animation","DROP","setMap","init","self","window"],"mappings":";;AAAA,CAAC,YAAM;AACL,MAAMA,YAAY;AAChBC,cAAU;AACRC,aAAO,wBADC;AAERD,gBAAU,EAACE,KAAK,UAAN,EAAkBC,KAAK,CAAC,SAAxB;AAFF,KADM;;AAMhBC,gBAAY;AACVC,cAAQ,EAACH,KAAK,SAAN,EAAiBC,KAAK,CAAC,OAAvB,EADE;AAEVG,YAAM,EAFI;AAGVC,sBAAgB,KAHN;AAIVC,mBAAa;AAJH,KANI;AAYhBC,WAZgB,qBAYN;AACR,UAAMC,MAAM,IAAIC,OAAOC,IAAP,CAAYC,GAAhB,CAAoBC,SAASC,aAAT,CAAuB,kBAAvB,CAApB,EAAgE,KAAKX,UAArE,CAAZ;AACA,WAAKM,GAAL,GAAWA,GAAX;AACD,KAfe;AAiBhBM,iBAjBgB,yBAiBFN,GAjBE,EAiBG;AACjB,UAAMO,SAAS,IAAIN,OAAOC,IAAP,CAAYM,YAAhB,EAAf;AACA,UAAMC,WAAW,KAAKnB,QAAL,CAAcA,QAA/B;AACA,UAAMC,QAAW,KAAKD,QAAL,CAAcC,KAA/B;AACA,UAAMmB,SAAS,IAAIT,OAAOC,IAAP,CAAYS,MAAhB,CAAuB;AACpCF,kBAAUA,QAD0B;AAEpClB,eAAOA,KAF6B;AAGpCqB,mBAAWX,OAAOC,IAAP,CAAYW,SAAZ,CAAsBC;AAHG,OAAvB,CAAf;AAKA;AACAJ,aAAOK,MAAP,CAAcf,GAAd;AACA;AACD,KA7Be;AA+BhBgB,QA/BgB,kBA+BT;AACL,UAAMC,OAAO,IAAb;AACA,WAAKlB,OAAL;AACA,WAAKO,aAAL,CAAmBW,KAAKjB,GAAxB;AACD;AAnCe,GAAlB;AAqCA;AACAkB,SAAO7B,SAAP,GAAmBA,SAAnB;AACA,SAAOA,SAAP;AACD,CAzCD","file":"index.js","sourcesContent":["(() => {\n  const googleMap = {\n    location: {\n      title: 'Redcliffe, Bristol, UK',\n      location: {lat: 51.4484272, lng: -2.5874823},\n    },\n\n    mapOptions: {\n      center: {lat: 51.454513, lng: -2.58791},\n      zoom: 15,\n      mapTypeControl: false,\n      scrollwheel: false\n    },\n    initMap() {\n      const map = new google.maps.Map(document.querySelector('.footer__top-map'), this.mapOptions);\n      this.map = map;\n    },\n\n    appendMarkers(map) {\n      const bounds = new google.maps.LatLngBounds();\n      const position = this.location.location;\n      const title    = this.location.title;\n      const marker = new google.maps.Marker({\n        position: position,\n        title: title,\n        animation: google.maps.Animation.DROP\n      });\n      // bounds.extend(marker.position);\n      marker.setMap(map);\n      // map.fitBounds(bounds);\n    },\n\n    init() {\n      const self = this;\n      this.initMap();\n      this.appendMarkers(self.map);\n    }\n  };\n  // this is required to make googleMAP.init available for google maps callback\n  window.googleMap = googleMap;\n  return googleMap;\n})();\n"]}