{"version":3,"sources":["index.es6"],"names":["googleMap","location","title","lat","lng","mapOptions","center","zoom","mapTypeControl","scrollwheel","draggable","initMap","map","google","maps","Map","document","querySelector","infowindow","InfoWindow","mapCanvas","$","appendMarkers","bounds","LatLngBounds","position","marker","Marker","animation","Animation","DROP","setMap","addListener","setAnimation","BOUNCE","populateInfoWindow","setContent","open","resizeMap","event","addDomListener","window","getCenter","getZoom","trigger","setCenter","mapCanvasHeight","checkHeightMap","setZoom","height","bindEvents","on","init"],"mappings":"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","file":"index.js","sourcesContent":["(() => {\n  const googleMap = {\n\n    location: {\n      title: 'Redcliffe, Bristol, UK',\n      location: {lat: 51.4484272, lng: -2.5874823},\n    },\n\n    mapOptions: {\n      center: {lat: 51.454513, lng: -2.58791},\n      zoom: 15,\n      mapTypeControl: false,\n      scrollwheel: false,\n      draggable: false\n    },\n\n    initMap() {\n      const map = new google.maps.Map(document.querySelector('.footer__top-map'), googleMap.mapOptions);\n      this.map = map;\n      this.infowindow = new google.maps.InfoWindow();\n      this.mapCanvas = $('.footer__top-map');\n    },\n\n    appendMarkers(map) {\n      const bounds = new google.maps.LatLngBounds();\n      const position = this.location.location;\n      const title    = this.location.title;\n      const marker = new google.maps.Marker({\n        position: position,\n        title: title,\n        animation: google.maps.Animation.DROP\n      });\n      // bounds.extend(marker.position);\n      marker.setMap(map);\n      // map.fitBounds(bounds);\n      marker.addListener('mouseover', function() {\n        marker.setAnimation(google.maps.Animation.BOUNCE);\n      });\n      marker.addListener('mouseout', function() {\n        marker.setAnimation(null);\n      });\n      marker.addListener('click', function() {\n        googleMap.populateInfoWindow(marker, googleMap.infowindow);\n      });\n    },\n\n    populateInfoWindow(marker, infowindow) {\n      // Check to make sure the infowindow is not already opened on this marker.\n      if (infowindow.marker != marker) {\n        infowindow.marker = marker;\n        infowindow.setContent('<div style=\"color: #000\">' + marker.title + '</div>');\n        infowindow.addListener('closeclick', function() {\n          infowindow.marker = null;\n        });\n        infowindow.open(googleMap.map, marker);\n      }\n    },\n\n    resizeMap(map) {\n      google.maps.event.addDomListener(window, \"resize\", function() {\n       let center = map.getCenter();\n       let zoom = map.getZoom();\n       google.maps.event.trigger(map, \"resize\");\n       map.setCenter(center);\n       let mapCanvasHeight = googleMap.checkHeightMap(googleMap.mapCanvas);\n       if (mapCanvasHeight === 400) {\n         googleMap.map.setZoom(14);\n         return;\n       }\n      });\n      google.maps.event.addDomListener(window, \"load\", function() {\n       let center = map.getCenter();\n       let zoom = map.getZoom();\n       google.maps.event.trigger(map, \"resize\");\n       map.setCenter(center);\n       let mapCanvasHeight = googleMap.checkHeightMap(googleMap.mapCanvas);\n       if (mapCanvasHeight === 400) {\n         googleMap.map.setZoom(14);\n         return;\n       }\n      });\n    },\n\n    checkHeightMap(mapCanvas) {\n      let height = mapCanvas.height();\n      return height;\n    },\n\n    bindEvents() {\n      $(window).on('resize orientationchange', this.resizeMap(googleMap.map));\n    },\n\n    init() {\n      this.initMap();\n      this.appendMarkers(googleMap.map);\n      this.bindEvents();\n      this.checkHeightMap(googleMap.mapCanvas);\n      this.resizeMap(googleMap.map);\n    }\n  };\n  // this is required to make googleMap.init available for google maps callback\n  window.googleMap = googleMap;\n  return googleMap;\n})();\n"]}